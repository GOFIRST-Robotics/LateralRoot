import os

def init(module):
    module.name = ":build"
    module.description = "Build Tools"

def prepare(module, options):
    module.add_option(BooleanOption(
        name="include_sconstruct", default=True,
        description=descr_include_sconstruct))
    module.add_option(BooleanOption(
        name="include_openocd_cfg", default=True,
        description=descr_include_openocd_cfg))

    return True

def build(env):
    env.outbasepath = "aruwlib/build_tools"
    env.copy("parse_args.py")
    env.copy("run_gcov.py")

    env.outbasepath = "aruwlib"

    properties = {}
    properties["modm_path"] = env["aruwlib:modm_repo_lb"]
    env.substitutions = properties

    env.template("project.xml.in", "project.xml")
    env.template("sim-modm/project.xml.in", "sim-modm/project.xml")

    env.outbasepath = "."
    if env["include_sconstruct"]:
        env.template("SConstruct.in", "SConstruct")
    if env["include_openocd_cfg"]:
        env.copy("openocd.cfg")


descr_include_sconstruct = """# Generate a SConstruct file

!!! warning "This overwrites any top-level `SConstruct` file!"
"""

descr_include_openocd_cfg = """# Generate openocd.cfg

!!! warning "This overwrites any top-level `openocd.cfg` file!"
"""
