import os

class Mock(Module):
    def init(self, module):
        module.name = ":testing:mock"

    def prepare(self, module, options):
        return True

    def build(self, env):
        env.outbasepath = env["aruwlib:project_name"] + "/test/aruwlib"
        env.copy("mock")

class ARUWLIBTests(Module):
    def init(self, module):
        module.name = ":testing:tests"

    def prepare(self, module, options):
        module.depends(
            "aruwlib:testing:mock",
            "aruwlib:core")
        return True

    def build(self, env):
        env.outbasepath = env["aruwlib:project_name"] + "/test/aruwlib"
        env.copy(".", ignore=env.ignore_paths("*/mock/*"))

def init(module):
    module.name = ":testing"
    module.description = "aruwlib Test Framework"

def prepare(module, options):
    module.add_submodule(Mock())
    module.add_submodule(ARUWLIBTests())
    return True

def build(env):
    pass
